#!/bin/bash
# vim:syntax=sh:ai:et:si:sts=4:sw=4
#
# postinst script for fbcp-ili9341
#

set -e
. /usr/share/debconf/confmodule

# list of display resolution
declare -A displays=(
[ILI9341]="320 240 60 1 0 0 0"
[ILI9340]="320 240 60 1 0 0 0"
[HX8357D]="480 320 60 1 0 0 0"
[SSD1351]="320 240 1 0 0 0"
[ILI9486]="320 480 60 1 0 0 0"
[ILI9486L]="320 240 60 1 0 0 0"
[ST7735R]="320 240 60 1 0 0 0"
[MZ61581]="320 240 60 1 0 0 0"
[ST7789]="320 240 60 1 0 0 0"
[ST7789VW]="320 240 60 1 0 0 0"
[ST7735S]="320 240 60 1 0 0 0"
[MPI3501]="320 240 60 1 0 0 0"
[ADAFRUIT_ILI9341_PITFT]="320 240 60 1 0 0 0"
[ADAFRUIT_HX8357D_PITFT]="480 320 60 1 0 0 0"
[FREEPLAYTECH_WAVESHARE32B]="480 320 60 1 0 0 0"
[WAVESHARE35B_ILI9486]="320 480 60 1 0 0 0"
[TONTEC_MZ61581]="320 480 60 1 0 0 0"
[WAVESHARE_ST7789VW_HAT]="240 240 60 1 0 0 0"
[WAVESHARE_ST7735S_HAT]="128 128 60 1 0 0 0"
[KEDEI_V63_MPI3501]="480 320 60 1 0 0 0"
)

sourcedir="/usr/share/${DPKG_MAINTSCRIPT_PACKAGE}/build"
sharedir="/usr/share/${DPKG_MAINTSCRIPT_PACKAGE}"

case "$1" in
    configure)
        declare -a cmakeopt=( )

        db_get fbcp-ili9341/statistics || true
        statistics="${RET}"
        case "${statistics,,}" in
            0|1|2)
                cmakeopt+=( "-DSTATISTICS=${statistics}" )
            ;;
            *)
                cmakeopt+=( "-DSTATISTICS=0" )
            ;;
        esac

# get the controller from the selection
        db_get fbcp-ili9341/ishat || true
        ishat="${RET}"
        case "${ishat,,}" in
            true)
                db_get fbcp-ili9341/hat || true
                controller="${RET}"
            ;;
            false)
                db_get fbcp-ili9341/wired || true
                controller="${RET}"
            ;;
        esac
        cmakeopt+=( "-D${controller}=ON" )

# get the divisor from the selection
        db_get fbcp-ili9341/divisor || true
        declare -i divisor="${RET}"
        if [ ${divisor} -eq 0 ]; then
            divisor=30
        elif [ $(( divisor % 2 )) -gt 0 ]; then
# use next higher even number
            (( divisor++ ))
        fi
        cmakeopt+=( "-DSPI_BUS_CLOCK_DIVISOR=${RET}" )

# build the binary
        rm -rf -- "${sourcedir}"
        mkdir -pv "${sourcedir}"
        pushd "${sourcedir}" > /dev/null 2>&1
        echo "cmake ${cmakeopt[@]}" >&2
        cmake ${cmakeopt[@]} ..
        make
        if [ -f "fbcp-ili9341" ]; then
            cp -vfT "fbcp-ili9341" "/usr/sbin/fbcp-ili9341"
        else
            echo "could not build fbcp-ili9341 binary." >&2
            echo "check for the reason in ${sourcedir}" >&2
            exit 1
        fi
        make clean
        popd > /dev/null 2>&1

# change config.txt
        db_get fbcp-ili9341/hdmi || true
        hdmi="${RET}"
        case "${hdmi,,}" in
            true)
                cp -f --backup=numbered "/boot/config.txt" "/var/backups/config.txt"
                cp -f "/boot/config.txt" "${sharedir}/config.txt.new"
                crudini --set "${sharedir}/config.txt.new" "" hdmi_group 2
                crudini --set "${sharedir}/config.txt.new" "" hdmi_mode 87
                crudini --set "${sharedir}/config.txt.new" "" hdmi_cvt "${displays[${controller}]:-320 240 60 1 0 0 0}"
                crudini --set "${sharedir}/config.txt.new" "" hdmi_force_hotplug 1
                cp -f "${sharedir}/config.txt.new" "/boot/config.txt.fbcp"
            ;;
            false)
            ;;
            *)
                echo "Ignoring HDMI value: ${hdmi}" >&2
            ;;
        esac

        cp -nv "/boot/config.txt" "/boot/config.txt.fbcp-orig"
        cp -fv "/boot/config.txt.fbcp" "/boot/config.txt"
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
